<?xml version="1.0" encoding="UTF-8"?>
<!-- 此文件本质就是一个spring的配置文件，只是在此基础上引入了dubbo相关的配置  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

     <!-- 服务提供方的应用信息：可以在dubbo监控中心（ dubbo-admin）通过此名称区分服务 -->
    <dubbo:application name="dubbo-provider"  />  

    <!-- 注册中心的服务地址：含集群在内共有四种配置方式（四选一即可） -->  
    <!-- 支持的注册中心类型有：zookeeper、redis、multicast、simple -->
    <!-- dubbo:registry address="zookeeper://127.0.0.1:2181" /-->
    <!-- dubbo:registry protocol="zookeeper" address="127.0.0.1:2181" /-->
    <!-- dubbo:registry address="zookeeper://127.0.0.1:2181?backup=127.0.0.1:2182,127.0.0.1:2183" /-->
    <dubbo:registry protocol="zookeeper" address="127.0.0.1:2181,127.0.0.1:2182,127.0.0.1:2183" />

    <!-- 指定dubbo服务的容错模式（此处为快速失败 ）-->
    <dubbo:provider cluster="failfast"/>
    
    <!-- 通过dubbo协议对外暴露服务端口 -->  
    <dubbo:protocol name="dubbo" port="20880" />  

    <!-- 声明需要在dubbo暴露的服务接口 -->  
    <dubbo:service interface="exp.dubbo.api.DemoService" ref="demoService" />
    
    <!-- 通过spring依赖注入服务接口的实现-->
    <bean id="demoService" class="exp.dubbo.provider.impl.DemoServiceImpl"/>
</beans>
