package exp.ali.math.question1;

/**
 * <PRE>
 * Qb：【问题描述】
 * 现在您开了一家电商店铺，卖与A店同款的耳机和音箱，标价相同。
 * 
 * 您计划提供满99返x的优惠券，x为大于0、小于99的整数。与A店不同的是，您的优惠券每单限用一张
 * （比如，买250块，需付250−x 块，而不是 250−2x 块）。
 * 
 * “双十一”期间，电商平台全场满299返60仍然适用。
 * 
 * 请问：x 至少等于多少时，小明在您的店铺买耳机和音箱其中一种会更便宜 (至少1元)? 
 * 又请问：x 至少等于多少时，小明在您的店铺既买耳机又买音箱总和会更便宜（至少1元）?
 * </PRE>
 * <br/><B>PROJECT : </B> Ali-Math-Competition
 * <br/><B>SUPPORT : </B> <a href="http://www.exp-blog.com" target="_blank">www.exp-blog.com</a> 
 * @version   2018-09-19
 * @author    EXP: 272629724@qq.com
 * @since     jdk版本：jdk1.6
 */
public class Qb {

	/**
	 * <PRE>
	 * Qb：【解题思路】
	 *   Qb就是在Qa基础上，衍化成运筹学的【线性规划】问题了。
	 *   
	 *   这里有两个小问，刚开始不好理解，其实意思是这是我的店（店铺B），要与Qa的店（店铺A）比较，一共三种情况：
	 *    当x至少为多少时，[单独买耳机] 时，店铺B比店铺A便宜。
	 *    当x至少为多少时，[单独买音箱] 时，店铺B比店铺A便宜。
	 *    当x至少为多少时，[同时买耳机和音箱] 时，店铺B比店铺A便宜。
	 *   
	 *   此问的关键就是建立这三种情况的【线性规划不等式】。
	 *   同时，Qb的结果是要基于Qa的结果之上计算的。
	 *   
	 *   在Qa已经算得，当在 [店铺A] 采购时：
	 *     [单独买耳机] 的最低价为： 250+49(平台凑单)-60(平台折扣)-4*5(店铺折扣) = 219
	 *     [单独买音箱] 的最低价为： 600-60(平台折扣)-10*5(店铺折扣) = 490
	 *     [同时买耳机和音箱] 的最低价为： 219 + 490 = 709
	 * -----------------------------------------------------------
	 * 
	 * 现在对Qb【建模】
	 * 为了避免决策变量过多，这里直接代入Qb题目参数后，再使用Qa的建模模型：
	 * 由此，题目新的【约束条件】如下：
	 * (1) 存在 [店内优惠券] ：满 99 减 x
	 * (2) [店内优惠券] 每张订单限用一张  
	 * (3) 存在 [平台优惠券] ：满 299 减 60
	 * (4) [平台优惠券] 每张订单限用一张
	 * (5) [平台优惠券] 可在 [其他店] 凑单
	 * (6) 题目并没有提及运费问题， 因此假设所有商品拆单或合单的运费代价是相同的
	 * (7) [店内优惠券] 与 [平台优惠券] 可在同一订单使用，并独立计算优惠
	 * (8) 耳机单价为250
	 * (9) 音箱单价为600
	 * -----------------------------------------------------------
	 * 
	 * 根据约束条件，类似Qa的做法，我们有：
	 * 
	 * 在 [店铺B] [单独买耳机(单价250)] 时：
	 *    店内折扣 = x （已满99）
	 *    平台折扣 = 60 - (299 - 250) = 11   （凑单49）
	 *    最优价 = 250 - x - 11 = 239 - x	-----（式A）
	 *    
	 * 在 [店铺B] [单独买音箱(单价600)] 时：
	 *    店内折扣 = x （已满99）
	 *    平台折扣 = 60 （无需凑单）
	 *    最优价 = 600 - x - 60 = 540 - x	-----（式B）
	 *    
	 * 在 [店铺B] [同时买耳机(单价250)和音箱(单价600)] 时， 这里又分两种情况：
	 *    [拆分成两张订单] 购买（其实就是上述 式A 和 式B 的总价）：
	 *      最优价 = (239 - x) + (540 - x) = 779 - 2x	-----（式C）
	 * 
	 *    [合并成一张订单] 购买：
	 *      店内折扣 = x （已满99）
	 *      平台折扣 = 60 （无需凑单）
	 *      最优价 = 250 + 600 - x - 60 = 790 - x	-----（式D）
	 * -----------------------------------------------------------
	 * 
	 * 现在根据题意， 建立不等式计算：
	 * 
	 *   要使得在 [店铺B] [单独买耳机] 更便宜，有：
	 *     239 - x < 219  得到  x > 20
	 *     又要使得 x 在区间 (0, 99)最小，即有  x = 21
	 *     
	 *   要使得在 [店铺B] [单独买音箱] 更便宜，有：
	 *     540 - x < 490  得到  x > 50
	 *     又要使得 x 在区间 (0, 99)最小，即有  x = 51
	 *     
	 *   要使得在 [店铺B] [同时买耳机和音箱] 更便宜，有：
	 *     拆单买：779 - 2x < 709  得到  x > 35
	 *          又要使得 x 在区间 (0, 99)最小，即有  x = 36
	 *     合单买：790 - x < 709  得到  x > 81
	 *          又要使得 x 在区间 (0, 99)最小，即有  x = 82
	 * 
	 * -----------------------------------------------------------
	 * 
	 * 综上得：
	 *   当x至少为[21]时，在我的店铺 [单独买耳机] 会比店铺A更便宜。
	 *   当x至少为[51]时，在我的店铺 [单独买音箱] 会比店铺B更便宜。
	 *   当x至少为[36]时，若顾客通过拆单手段购买，在我的店铺 [同时买耳机和音箱] 会比店铺B更便宜。
	 *   当x至少为[82]时，若顾客通过合并订单购买，在我的店铺 [同时买耳机和音箱] 会比店铺B更便宜。
	 * 
	 * </PRE>
	 */
	
}
