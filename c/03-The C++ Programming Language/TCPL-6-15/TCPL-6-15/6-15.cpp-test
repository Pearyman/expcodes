#include<iostream>
using namespace std;
void send(int* to,int* from)
{

	*to++=*from++;
	cout<<*(to-1)<<','<<*(from-1)<<endl;
	*to++=*from++;
	cout<<*(to-1)<<','<<*(from-1)<<endl;
	*to++=*from++;
	cout<<*(to-1)<<','<<*(from-1)<<endl;
	*to++=*from++;
	cout<<*(to-1)<<','<<*(from-1)<<endl; //这里开始已经超出数组b界限，为什么from会自动返回b数组开头，继续对a赋值
	*to++=*from++;
	cout<<*(to-1)<<','<<*(from-1)<<endl;
	return;
}

void test(int* from)
{
	*from++;
	cout<<*(from-1)<<endl;
	cout<<(from-1)<<endl;      //输出首地址
	*from++;
	cout<<*(from-1)<<endl;
	*from++;
	cout<<*(from-1)<<endl;
	*from++;                       //这里开始from已经越界，但是在执行send()函数对a复制的前后，结果却有所不同
	cout<<*(from-1)<<endl;
	cout<<(from-1)<<endl;      //输出第一个越界地址，和首地址不同,但是值一样
	*from++;
	cout<<*(from-1)<<endl;
	return;
}

int main(void)
{
	const int NUM=5;
	int a[NUM];
	int b[3]={19,18,17};

	test(b);       //执行send()函数前，在from指针越界后，输出的是随机值
	cout<<"=========================================="<<endl;
	send(a,b);       //这仅仅是简单的复制而已
	cout<<"=========================================="<<endl;
	test(b);       //执行send()函数后，在from指针越界后，from自动回到b开头继续复制，输出的是b中的元素值

	system("pause");
	return 0;
}


//这是什么原因？难道元素少的数组对元素多的数组进行复制后，会自动循环指针所指向的对象？还是数组b被a扩充了？